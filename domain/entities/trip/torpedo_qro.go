// Code generated by Torpedo DO NOT EDIT.

// Package trip The user fly trip reservations
package trip

import (
	"github.com/darksubmarine/torpedo-lib-go"
	"github.com/darksubmarine/torpedo-lib-go/entity"
	"github.com/darksubmarine/torpedo-lib-go/tql"
)

var _qroFieldsMap = map[string]string{
	"id":      "Id_",
	"created": "Created_",
	"updated": "Updated_",

	"departure": "Departure_",

	"arrival": "Arrival_",

	"miles": "Miles_",

	"from": "From_",

	"to": "To_",

	"userId": "UserId_",
}

type EntityQRO struct {
	Id_      *string `json:"id,omitempty"`
	Created_ *int64  `json:"created,omitempty"`
	Updated_ *int64  `json:"updated,omitempty"`

	Departure_ *string `json:"departure,omitempty"`

	Arrival_ *string `json:"arrival,omitempty"`

	Miles_ *int64 `json:"miles,omitempty"`

	From_ *int64 `json:"from,omitempty"`

	To_ *int64 `json:"to,omitempty"`

	UserId_ *string `json:"userId,omitempty"`

	QRO
}

func (qro *EntityQRO) FieldValue(field string) interface{} {
	return tql.FieldValue(qro, entity.FieldNameToCode(field))
}

func (qro *EntityQRO) HydrateFromEntity(ety *TripEntity, fields ...string) error {

	if ety == nil {
		return torpedo_lib.ErrNilEntity
	}

	entity.To(ety, qro, fields...)

	return nil
}
